<!DOCTYPE html>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<html>
<head>
    <title>Connected Clients</title>
    <!--<meta charset="UTF-8"> -->
	<script src="operation.js" type="text/javascript" ></script>
	<script src="client.js" type="text/javascript" ></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script> 
    <!--<script type="text/javascript" src="jquery.js"></script>  -->
    <script src="/socket.io/socket.io.js"></script>
	<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css" rel="stylesheet">
    
</head>
<body>
    <h1> Username: <%=UID%> </h1>
	<h1>Document ID: <%=DOCID%> </h1>
    <textarea id="editor" style = "margin: 50px; width: 90%; height: 500px;"></textarea>

    <script>



		var myname = '<%=UID%>';
		var client;
		var socket;

		console.log('uid: ' + myname);

        var cnt = 0;


		$(document).ready(function () {
            client = new Client(myname, '',  0);
			socket = io.connect('http://localhost:3000');


            // notice server of this new client and start initialization
			socket.emit('newClient', {uid: myname});

			// initialization: sync with server
			socket.on('initClient', function(data) {					// data {uid:data.uid, v:version, txt: text}

				if (data.uid == myname) {
					client.setDoc(data.txt);
					client.setVersion( data.v );
					$('#editor').val(data.txt);
					console.log('Client '+myname + ', (me), has joined in.');
				}
                else {
					console.log('A client just joined in: '+data.uid+'; his version is : V'+data.v);
				}

			});



			// when receiving an operation from the server, data: {ops:operation.ops, initLen:operation.initLen, finalLen:operation.finalLen, uid: sender, v: version}
			socket.on('edit_editor', function(data) {

				// if the incoming operation is THE operation the client has sent to server
				// it means the client's outstanding operation is accepted by the server
				// perform client.serverAck

				console.log('Received an operation from server !');
				console.log('uid: '+data.uid);
				console.log('version: '+data.v);

				operation = new Operation(data.ops, data.initLen, data.finalLen);
				operation.displayOps();

				if (data.uid === client.uid) {
					console.log('The received operaiton is previously sent by me ! So perform serverAck() !');
					client.serverAck();
				}

				// when the incoming operation is not the operation the client has sent to server, simply apply it to the client's document
				else {
					console.log('The received operaiton is not previously sent by me ! So perform applyServer() !');
					client.applyServer(operation);
					// display modified text
					$('#editor').val(client.doc);
				}



			});



            // when a key is released, create an operation for it and invoke client.applyClient(operation)
			$('#editor').on('keydown',function(key){
                console.log('A key is pressed !');

				client.setDoc($('#editor').val());
				var strLen =  client.doc.length;
				if(key.keyCode < 37 || key.keyCode > 40)
				{
					var op = new Operation();
					var position = $('#editor').prop("selectionStart");

                    // if delete a char
					if(key.keyCode == 8 || key.keyCode == 46) // 8 == BackSpace, 46 == Delete
                    {
                         op.retain(position+1).delete(1).retain(strLen-position);
					}
                    // if insert a char
					else
					{
						 value = String.fromCharCode(key.keyCode).toLowerCase();
                         op.retain(position).insert(value).retain(strLen-position);
					}

                    console.log('This key creates an op: ');
                    op.displayOps();


                    client.applyClient(op);
				}

                else {
                    console.log('Pressed key is not yet supported !');
                }


			});


		});




    </script>
    
  
</body>
</html>